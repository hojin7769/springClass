
	[ 1. 스프링에서 Transaction ] Chapter12 스프링의 트랙잭션 관리. p.505(507)
	2. 스프링이 제공하는 트랜잭션 방법
		ㄱ. 코드 기반 처리
		ㄴ. 선언적 트랜잭션        xml 설정
		ㄷ.어노테이션 기반.        @어노테이션 설정
	3. 트랜잭션? 두개 이상의 업무가 하나의 논리적인 작업 단위를 이루는 상태.
		All Or Nothing
	4. 트랜잭션의 4가지 특징 ( ACID )	
		ㄱ 원자성
		ㄴ 일관성
		ㄷ 고립성
		ㄹ 지속성
	5. 스프링의 트랜잭션 지원 p.507
		ㄱ. 트랜잭션의 범위를 코드 수준에서 정의 하는 스프링이 제공하는 "트랜잭션 템플릿 클래스"...
	
	6. 스프링에서 트랜잭션 처리를 하려면 트랜잭션관리자(Transction Manager)가 필요하다.
		직접 트랜잭션 관리자를 사용하는 것이 아니라
		트랜잭션 템플릿 클래스를 사용하던지 선언적 방식 트랜잭션 처리 사용한다.
	
	7. JDBC 기반 트랜잭션 관리자 설정....
		dispatcher-service.xml 파일 코딩.
		<bean id="transactionManager" 
			class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
		</bean>
	
	8. *** 트랜잭션 [ 전파 ]와 [ 격리 ] 레벨 **** p511
		- 현재 진행 중인 트랜잭션이 있는 상태에서 
		  새로운 트랜잭션을 시작하고 싶다면 어떻게 할까요?
	9. p511 트랜잭션 템플릭(Transaction Template) 을 이용한 트랜잭션 처리.
		<bean id="transactionTemplate"
				class="org.springframework.transaction.support.TransactionTemplate">
			<property name="transactionManager" ref="transactionManager"></property>
		</bean>
	
	10. 공지사항 새글쓰기( 등록 )
		1) 새글 INSERT
		2) 작성한 회원의 포인트( point ) 칼럼을 1증가...
		
		1) + 2) 트랜잭션 처리.... 
	
	11  alter table member
		add( point number(10) default(0));
		
	12 alter table member
		add constraint ck_member_point check( point < 3);
	13 제약조건 확인
	select *
	FROM user_constraints
	where regexp_like(table_name,'MEMBER') ;
	
	
	19 트랜잭션 처리 체크
		(1) NoticeDao 인터페이스 안에 insertAndPointUpOfMember();
		(2) 트랜잭션 처리 X 메서드
		(3) 트랜잭션 처리 o 메서드 - 트랜잭션 매니저
		(4) 트랜잭션 처리 o 메서드 - 트랜잭션 템플릿
	
	
	100. 선언적 트랜잭션 처리 p522
	
	
	
		   
	
		
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	